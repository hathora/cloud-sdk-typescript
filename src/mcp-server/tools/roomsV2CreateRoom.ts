/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { roomsV2CreateRoom } from "../../funcs/roomsV2CreateRoom.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  createRoomParams: components.CreateRoomParams$inboundSchema,
  appId: z.string().optional(),
  roomId: z.string().optional(),
};

export const tool$roomsV2CreateRoom: ToolDefinition<typeof args> = {
  name: "rooms-v2_create-room",
  description: `CreateRoom

Create a new [room](https://hathora.dev/docs/concepts/hathora-entities#room) for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application). Poll the [\`GetConnectionInfo()\`](https://hathora.dev/api#tag/RoomV2/operation/GetConnectionInfo) endpoint to get connection details for an active room.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await roomsV2CreateRoom(
      client,
      args.createRoomParams,
      args.appId,
      args.roomId,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

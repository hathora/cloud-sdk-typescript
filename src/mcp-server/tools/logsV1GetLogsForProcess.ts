/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { logsV1GetLogsForProcess } from "../../funcs/logsV1GetLogsForProcess.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  processId: z.string(),
  appId: z.string().optional(),
  follow: z.boolean().optional(),
  tailLines: z.number().int().default(100),
};

export const tool$logsV1GetLogsForProcess: ToolDefinition<typeof args> = {
  name: "logs-v1_get-logs-for-process",
  description: `GetLogsForProcess

Returns a stream of logs for a [process](https://hathora.dev/docs/concepts/hathora-entities#process) using \`appId\` and \`processId\`.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await logsV1GetLogsForProcess(
      client,
      args.processId,
      args.appId,
      args.follow,
      args.tailLines,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

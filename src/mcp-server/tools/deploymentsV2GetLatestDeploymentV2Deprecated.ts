/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { deploymentsV2GetLatestDeploymentV2Deprecated } from "../../funcs/deploymentsV2GetLatestDeploymentV2Deprecated.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  appId: z.string().optional(),
};

export const tool$deploymentsV2GetLatestDeploymentV2Deprecated: ToolDefinition<
  typeof args
> = {
  name: "deployments-v2-get-latest-deployment-v2-deprecated",
  description: `GetLatestDeploymentV2Deprecated

Get the latest [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await deploymentsV2GetLatestDeploymentV2Deprecated(
        client,
        args.appId,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

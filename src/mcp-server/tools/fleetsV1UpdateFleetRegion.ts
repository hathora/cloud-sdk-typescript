/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { fleetsV1UpdateFleetRegion } from "../../funcs/fleetsV1UpdateFleetRegion.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  fleetId: z.string(),
  region: components.Region$inboundSchema,
  fleetRegionConfig: components.FleetRegionConfig$inboundSchema,
  orgId: z.string().optional(),
};

export const tool$fleetsV1UpdateFleetRegion: ToolDefinition<typeof args> = {
  name: "fleets-v1-update-fleet-region",
  description: `UpdateFleetRegion

Updates the configuration for a given [fleet](https://hathora.dev/docs/concepts/hathora-entities#fleet) in a region.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await fleetsV1UpdateFleetRegion(
      client,
      args.fleetId,
      args.region,
      args.fleetRegionConfig,
      args.orgId,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};

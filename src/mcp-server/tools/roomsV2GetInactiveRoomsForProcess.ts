/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { roomsV2GetInactiveRoomsForProcess } from "../../funcs/roomsV2GetInactiveRoomsForProcess.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  processId: z.string(),
  appId: z.string().optional(),
};

export const tool$roomsV2GetInactiveRoomsForProcess: ToolDefinition<
  typeof args
> = {
  name: "rooms-v2_get-inactive-rooms-for-process",
  description: `GetInactiveRoomsForProcess

Get all inactive [rooms](https://hathora.dev/docs/concepts/hathora-entities#room) for a given [process](https://hathora.dev/docs/concepts/hathora-entities#process).`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await roomsV2GetInactiveRoomsForProcess(
      client,
      args.processId,
      args.appId,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { buildsV3DeleteBuild } from "../../funcs/buildsV3DeleteBuild.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  buildId: z.string(),
  orgId: z.string().optional(),
};

export const tool$buildsV3DeleteBuild: ToolDefinition<typeof args> = {
  name: "builds-v3-delete-build",
  description: `DeleteBuild

Delete a [build](https://hathora.dev/docs/concepts/hathora-entities#build). All associated metadata is deleted.
Be careful which builds you delete. This endpoint does not prevent you from deleting actively used builds.
Deleting a build that is actively build used by an app's deployment will cause failures when creating rooms.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await buildsV3DeleteBuild(
      client,
      args.buildId,
      args.orgId,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { nodesV1GetNode } from "../funcs/nodesV1GetNode.js";
import { nodesV1ListProvisionedNodes } from "../funcs/nodesV1ListProvisionedNodes.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class NodesV1 extends ClientSDK {
  /**
   * GetNode
   *
   * @remarks
   * Returns information about the node identified by `appId`.
   */
  async getNode(
    nodeId: string,
    options?: RequestOptions,
  ): Promise<components.NodeV1> {
    return unwrapAsync(nodesV1GetNode(
      this,
      nodeId,
      options,
    ));
  }

  /**
   * ListProvisionedNodes
   *
   * @remarks
   * List nodes that are running or draining. Filter the array by optionally passing in a `region`.
   */
  async listProvisionedNodes(
    fleetId: string,
    orgId?: string | undefined,
    region?: components.Region | undefined,
    options?: RequestOptions,
  ): Promise<Array<components.NodeV1>> {
    return unwrapAsync(nodesV1ListProvisionedNodes(
      this,
      fleetId,
      orgId,
      region,
      options,
    ));
  }
}

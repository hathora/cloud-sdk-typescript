/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { billingV1GetBalance } from "../funcs/billingV1GetBalance.js";
import { billingV1GetInvoices } from "../funcs/billingV1GetInvoices.js";
import { billingV1GetPaymentMethod } from "../funcs/billingV1GetPaymentMethod.js";
import { billingV1InitStripeCustomerPortalUrl } from "../funcs/billingV1InitStripeCustomerPortalUrl.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class BillingV1 extends ClientSDK {
    async getBalance(options?: RequestOptions): Promise<number> {
        return unwrapAsync(billingV1GetBalance(this, options));
    }

    async getPaymentMethod(options?: RequestOptions): Promise<components.PaymentMethod> {
        return unwrapAsync(billingV1GetPaymentMethod(this, options));
    }

    async initStripeCustomerPortalUrl(
        request: components.CustomerPortalUrl,
        options?: RequestOptions
    ): Promise<string> {
        return unwrapAsync(billingV1InitStripeCustomerPortalUrl(this, request, options));
    }

    async getInvoices(options?: RequestOptions): Promise<Array<components.Invoice>> {
        return unwrapAsync(billingV1GetInvoices(this, options));
    }
}

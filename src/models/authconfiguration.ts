/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../internal/utils";
import { RecordStringNever } from "./recordstringnever";
import { Expose, Type } from "class-transformer";

/**
 * Enable google auth for your application.
 */
export class Google extends SpeakeasyBase {
    /**
     * A Google generated token representing the developer's credentials for [Google's API Console](https://console.cloud.google.com/apis/dashboard?pli=1&project=discourse-login-388921). Learn how to get a `clientId` [here](https://developers.google.com/identity/gsi/web/guides/get-google-api-clientid).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;
}

/**
 * Configure [player authentication](https://hathora.dev/docs/lobbies-and-matchmaking/auth-service) for your application. Use Hathora's built-in auth providers or use your own [custom authentication](https://hathora.dev/docs/lobbies-and-matchmaking/auth-service#custom-auth-provider).
 */
export class AuthConfiguration extends SpeakeasyBase {
    /**
     * Construct a type with a set of properties K of type T
     */
    @SpeakeasyMetadata()
    @Expose({ name: "anonymous" })
    @Type(() => RecordStringNever)
    anonymous?: RecordStringNever;

    /**
     * Enable google auth for your application.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "google" })
    @Type(() => Google)
    google?: Google;

    /**
     * Construct a type with a set of properties K of type T
     */
    @SpeakeasyMetadata()
    @Expose({ name: "nickname" })
    @Type(() => RecordStringNever)
    nickname?: RecordStringNever;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../internal/utils";
import { MetricValue } from "./metricvalue";
import { Expose, Type } from "class-transformer";

/**
 * Construct a type with a set of properties K of type T
 */
export class MetricsResponse extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: MetricValue })
    @Expose({ name: "active_connections" })
    @Type(() => MetricValue)
    activeConnections?: MetricValue[];

    @SpeakeasyMetadata({ elemType: MetricValue })
    @Expose({ name: "cpu" })
    @Type(() => MetricValue)
    cpu?: MetricValue[];

    @SpeakeasyMetadata({ elemType: MetricValue })
    @Expose({ name: "memory" })
    @Type(() => MetricValue)
    memory?: MetricValue[];

    @SpeakeasyMetadata({ elemType: MetricValue })
    @Expose({ name: "rate_egress" })
    @Type(() => MetricValue)
    rateEgress?: MetricValue[];

    @SpeakeasyMetadata({ elemType: MetricValue })
    @Expose({ name: "total_egress" })
    @Type(() => MetricValue)
    totalEgress?: MetricValue[];
}

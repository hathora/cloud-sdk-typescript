/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../internal/utils";
import { Region } from "./region";
import { Expose, Transform, Type } from "class-transformer";

export class RegionalContainerTags extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "containerTag" })
    containerTag: string;

    @SpeakeasyMetadata()
    @Expose({ name: "region" })
    region: Region;
}

/**
 * Current status of your build.
 *
 * @remarks
 *
 * `created`: a build was created but not yet run
 *
 * `running`: the build process is actively executing
 *
 * `succeeded`: the game server artifact was successfully built and stored in the Hathora registries
 *
 * `failed`: the build process was unsuccessful, most likely due to an error with the `Dockerfile`
 */
export enum Status {
    Created = "created",
    Running = "running",
    Succeeded = "succeeded",
    Failed = "failed",
}

/**
 * A build represents a game server artifact and its associated metadata.
 */
export class Build extends SpeakeasyBase {
    /**
     * System generated unique identifier for an application.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appId" })
    appId: string;

    /**
     * System generated id for a build. Increments by 1.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "buildId" })
    buildId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "buildTag" })
    buildTag: string;

    /**
     * When [`CreateBuild()`](https://hathora.dev/api#tag/BuildV1/operation/CreateBuild) is called.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    /**
     * Email address for the user that created the build.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdBy" })
    createdBy: string;

    /**
     * When the build was deleted.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deletedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt: Date;

    /**
     * When [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) finished executing.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "finishedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    finishedAt: Date;

    /**
     * The size (in bytes) of the Docker image built by Hathora.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "imageSize" })
    imageSize: number;

    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata({ elemType: RegionalContainerTags })
    @Expose({ name: "regionalContainerTags" })
    @Type(() => RegionalContainerTags)
    regionalContainerTags: RegionalContainerTags[];

    /**
     * When [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) is called.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "startedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    startedAt: Date;

    /**
     * Current status of your build.
     *
     * @remarks
     *
     * `created`: a build was created but not yet run
     *
     * `running`: the build process is actively executing
     *
     * `succeeded`: the game server artifact was successfully built and stored in the Hathora registries
     *
     * `failed`: the build process was unsuccessful, most likely due to an error with the `Dockerfile`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: Status;
}

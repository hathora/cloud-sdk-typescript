/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetLogsForProcessGlobals = {
    appId?: string | undefined;
};

export type GetLogsForProcessRequest = {
    appId?: string | undefined;
    processId: string;
    follow?: boolean | undefined;
    tailLines?: number | undefined;
};

/** @internal */
export namespace GetLogsForProcessGlobals$ {
    export const inboundSchema: z.ZodType<GetLogsForProcessGlobals, z.ZodTypeDef, unknown> =
        z.object({
            appId: z.string().optional(),
        });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLogsForProcessGlobals> =
        z.object({
            appId: z.string().optional(),
        });
}

/** @internal */
export namespace GetLogsForProcessRequest$ {
    export const inboundSchema: z.ZodType<GetLogsForProcessRequest, z.ZodTypeDef, unknown> =
        z.object({
            appId: z.string().optional(),
            processId: z.string(),
            follow: z.boolean().default(false),
            tailLines: z.number().int().default(100),
        });

    export type Outbound = {
        appId?: string | undefined;
        processId: string;
        follow: boolean;
        tailLines: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLogsForProcessRequest> =
        z.object({
            appId: z.string().optional(),
            processId: z.string(),
            follow: z.boolean().default(false),
            tailLines: z.number().int().default(100),
        });
}

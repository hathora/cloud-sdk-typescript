/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ResumeRoomGlobals = {
  appId?: string | undefined;
};

export type ResumeRoomRequest = {
  appId?: string | undefined;
  roomId: string;
};

/** @internal */
export const ResumeRoomGlobals$inboundSchema: z.ZodType<
  ResumeRoomGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type ResumeRoomGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const ResumeRoomGlobals$outboundSchema: z.ZodType<
  ResumeRoomGlobals$Outbound,
  z.ZodTypeDef,
  ResumeRoomGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResumeRoomGlobals$ {
  /** @deprecated use `ResumeRoomGlobals$inboundSchema` instead. */
  export const inboundSchema = ResumeRoomGlobals$inboundSchema;
  /** @deprecated use `ResumeRoomGlobals$outboundSchema` instead. */
  export const outboundSchema = ResumeRoomGlobals$outboundSchema;
  /** @deprecated use `ResumeRoomGlobals$Outbound` instead. */
  export type Outbound = ResumeRoomGlobals$Outbound;
}

export function resumeRoomGlobalsToJSON(
  resumeRoomGlobals: ResumeRoomGlobals,
): string {
  return JSON.stringify(
    ResumeRoomGlobals$outboundSchema.parse(resumeRoomGlobals),
  );
}

export function resumeRoomGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<ResumeRoomGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResumeRoomGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResumeRoomGlobals' from JSON`,
  );
}

/** @internal */
export const ResumeRoomRequest$inboundSchema: z.ZodType<
  ResumeRoomRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
  roomId: z.string(),
});

/** @internal */
export type ResumeRoomRequest$Outbound = {
  appId?: string | undefined;
  roomId: string;
};

/** @internal */
export const ResumeRoomRequest$outboundSchema: z.ZodType<
  ResumeRoomRequest$Outbound,
  z.ZodTypeDef,
  ResumeRoomRequest
> = z.object({
  appId: z.string().optional(),
  roomId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResumeRoomRequest$ {
  /** @deprecated use `ResumeRoomRequest$inboundSchema` instead. */
  export const inboundSchema = ResumeRoomRequest$inboundSchema;
  /** @deprecated use `ResumeRoomRequest$outboundSchema` instead. */
  export const outboundSchema = ResumeRoomRequest$outboundSchema;
  /** @deprecated use `ResumeRoomRequest$Outbound` instead. */
  export type Outbound = ResumeRoomRequest$Outbound;
}

export function resumeRoomRequestToJSON(
  resumeRoomRequest: ResumeRoomRequest,
): string {
  return JSON.stringify(
    ResumeRoomRequest$outboundSchema.parse(resumeRoomRequest),
  );
}

export function resumeRoomRequestFromJSON(
  jsonString: string,
): SafeParseResult<ResumeRoomRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResumeRoomRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResumeRoomRequest' from JSON`,
  );
}

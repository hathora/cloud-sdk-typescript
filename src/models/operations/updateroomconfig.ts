/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateRoomConfigGlobals = {
    appId?: string | undefined;
};

export type UpdateRoomConfigRequest = {
    appId?: string | undefined;
    roomId: string;
    updateRoomConfigParams: components.UpdateRoomConfigParams;
};

/** @internal */
export namespace UpdateRoomConfigGlobals$ {
    export const inboundSchema: z.ZodType<UpdateRoomConfigGlobals, z.ZodTypeDef, unknown> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateRoomConfigGlobals> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace UpdateRoomConfigRequest$ {
    export const inboundSchema: z.ZodType<UpdateRoomConfigRequest, z.ZodTypeDef, unknown> = z
        .object({
            appId: z.string().optional(),
            roomId: z.string(),
            UpdateRoomConfigParams: components.UpdateRoomConfigParams$.inboundSchema,
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                roomId: v.roomId,
                updateRoomConfigParams: v.UpdateRoomConfigParams,
            };
        });

    export type Outbound = {
        appId?: string | undefined;
        roomId: string;
        UpdateRoomConfigParams: components.UpdateRoomConfigParams$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateRoomConfigRequest> = z
        .object({
            appId: z.string().optional(),
            roomId: z.string(),
            updateRoomConfigParams: components.UpdateRoomConfigParams$.outboundSchema,
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                roomId: v.roomId,
                UpdateRoomConfigParams: v.updateRoomConfigParams,
            };
        });
}

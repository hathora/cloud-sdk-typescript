/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreatePublicLobbyGlobals = {
    appId?: string | undefined;
};

export type CreatePublicLobbySecurity = {
    playerAuth: string;
};

export type CreatePublicLobbyRequestBody = {
    /**
     * User input to initialize the game state. Object must be smaller than 64KB.
     */
    initialConfig?: any | undefined;
    region: components.Region;
};

export type CreatePublicLobbyRequest = {
    appId?: string | undefined;
    roomId?: string | undefined;
    requestBody: CreatePublicLobbyRequestBody;
};

/** @internal */
export const CreatePublicLobbyGlobals$inboundSchema: z.ZodType<
    CreatePublicLobbyGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    appId: z.string().optional(),
});

/** @internal */
export type CreatePublicLobbyGlobals$Outbound = {
    appId?: string | undefined;
};

/** @internal */
export const CreatePublicLobbyGlobals$outboundSchema: z.ZodType<
    CreatePublicLobbyGlobals$Outbound,
    z.ZodTypeDef,
    CreatePublicLobbyGlobals
> = z.object({
    appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePublicLobbyGlobals$ {
    /** @deprecated use `CreatePublicLobbyGlobals$inboundSchema` instead. */
    export const inboundSchema = CreatePublicLobbyGlobals$inboundSchema;
    /** @deprecated use `CreatePublicLobbyGlobals$outboundSchema` instead. */
    export const outboundSchema = CreatePublicLobbyGlobals$outboundSchema;
    /** @deprecated use `CreatePublicLobbyGlobals$Outbound` instead. */
    export type Outbound = CreatePublicLobbyGlobals$Outbound;
}

/** @internal */
export const CreatePublicLobbySecurity$inboundSchema: z.ZodType<
    CreatePublicLobbySecurity,
    z.ZodTypeDef,
    unknown
> = z.object({
    playerAuth: z.string(),
});

/** @internal */
export type CreatePublicLobbySecurity$Outbound = {
    playerAuth: string;
};

/** @internal */
export const CreatePublicLobbySecurity$outboundSchema: z.ZodType<
    CreatePublicLobbySecurity$Outbound,
    z.ZodTypeDef,
    CreatePublicLobbySecurity
> = z.object({
    playerAuth: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePublicLobbySecurity$ {
    /** @deprecated use `CreatePublicLobbySecurity$inboundSchema` instead. */
    export const inboundSchema = CreatePublicLobbySecurity$inboundSchema;
    /** @deprecated use `CreatePublicLobbySecurity$outboundSchema` instead. */
    export const outboundSchema = CreatePublicLobbySecurity$outboundSchema;
    /** @deprecated use `CreatePublicLobbySecurity$Outbound` instead. */
    export type Outbound = CreatePublicLobbySecurity$Outbound;
}

/** @internal */
export const CreatePublicLobbyRequestBody$inboundSchema: z.ZodType<
    CreatePublicLobbyRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    initialConfig: z.any().optional(),
    region: components.Region$inboundSchema,
});

/** @internal */
export type CreatePublicLobbyRequestBody$Outbound = {
    initialConfig?: any | undefined;
    region: string;
};

/** @internal */
export const CreatePublicLobbyRequestBody$outboundSchema: z.ZodType<
    CreatePublicLobbyRequestBody$Outbound,
    z.ZodTypeDef,
    CreatePublicLobbyRequestBody
> = z.object({
    initialConfig: z.any().optional(),
    region: components.Region$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePublicLobbyRequestBody$ {
    /** @deprecated use `CreatePublicLobbyRequestBody$inboundSchema` instead. */
    export const inboundSchema = CreatePublicLobbyRequestBody$inboundSchema;
    /** @deprecated use `CreatePublicLobbyRequestBody$outboundSchema` instead. */
    export const outboundSchema = CreatePublicLobbyRequestBody$outboundSchema;
    /** @deprecated use `CreatePublicLobbyRequestBody$Outbound` instead. */
    export type Outbound = CreatePublicLobbyRequestBody$Outbound;
}

/** @internal */
export const CreatePublicLobbyRequest$inboundSchema: z.ZodType<
    CreatePublicLobbyRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        appId: z.string().optional(),
        roomId: z.string().optional(),
        RequestBody: z.lazy(() => CreatePublicLobbyRequestBody$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type CreatePublicLobbyRequest$Outbound = {
    appId?: string | undefined;
    roomId?: string | undefined;
    RequestBody: CreatePublicLobbyRequestBody$Outbound;
};

/** @internal */
export const CreatePublicLobbyRequest$outboundSchema: z.ZodType<
    CreatePublicLobbyRequest$Outbound,
    z.ZodTypeDef,
    CreatePublicLobbyRequest
> = z
    .object({
        appId: z.string().optional(),
        roomId: z.string().optional(),
        requestBody: z.lazy(() => CreatePublicLobbyRequestBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePublicLobbyRequest$ {
    /** @deprecated use `CreatePublicLobbyRequest$inboundSchema` instead. */
    export const inboundSchema = CreatePublicLobbyRequest$inboundSchema;
    /** @deprecated use `CreatePublicLobbyRequest$outboundSchema` instead. */
    export const outboundSchema = CreatePublicLobbyRequest$outboundSchema;
    /** @deprecated use `CreatePublicLobbyRequest$Outbound` instead. */
    export type Outbound = CreatePublicLobbyRequest$Outbound;
}

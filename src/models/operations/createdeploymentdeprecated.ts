/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type CreateDeploymentDeprecatedGlobals = {
    appId?: string | undefined;
};

export type CreateDeploymentDeprecatedRequest = {
    appId?: string | undefined;
    buildId: number;
    deploymentConfig: components.DeploymentConfig;
};

/** @internal */
export namespace CreateDeploymentDeprecatedGlobals$ {
    export const inboundSchema: z.ZodType<
        CreateDeploymentDeprecatedGlobals,
        z.ZodTypeDef,
        unknown
    > = z.object({
        appId: z.string().optional(),
    });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateDeploymentDeprecatedGlobals
    > = z.object({
        appId: z.string().optional(),
    });
}

/** @internal */
export namespace CreateDeploymentDeprecatedRequest$ {
    export const inboundSchema: z.ZodType<
        CreateDeploymentDeprecatedRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            appId: z.string().optional(),
            buildId: z.number().int(),
            DeploymentConfig: components.DeploymentConfig$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                DeploymentConfig: "deploymentConfig",
            });
        });

    export type Outbound = {
        appId?: string | undefined;
        buildId: number;
        DeploymentConfig: components.DeploymentConfig$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateDeploymentDeprecatedRequest
    > = z
        .object({
            appId: z.string().optional(),
            buildId: z.number().int(),
            deploymentConfig: components.DeploymentConfig$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                deploymentConfig: "DeploymentConfig",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateWithMultipartUploadsV2DeprecatedGlobals = {
    appId?: string | undefined;
};

export type CreateWithMultipartUploadsV2DeprecatedRequest = {
    appId?: string | undefined;
    createMultipartBuildParams: components.CreateMultipartBuildParams;
};

/** @internal */
export const CreateWithMultipartUploadsV2DeprecatedGlobals$inboundSchema: z.ZodType<
    CreateWithMultipartUploadsV2DeprecatedGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    appId: z.string().optional(),
});

/** @internal */
export type CreateWithMultipartUploadsV2DeprecatedGlobals$Outbound = {
    appId?: string | undefined;
};

/** @internal */
export const CreateWithMultipartUploadsV2DeprecatedGlobals$outboundSchema: z.ZodType<
    CreateWithMultipartUploadsV2DeprecatedGlobals$Outbound,
    z.ZodTypeDef,
    CreateWithMultipartUploadsV2DeprecatedGlobals
> = z.object({
    appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWithMultipartUploadsV2DeprecatedGlobals$ {
    /** @deprecated use `CreateWithMultipartUploadsV2DeprecatedGlobals$inboundSchema` instead. */
    export const inboundSchema = CreateWithMultipartUploadsV2DeprecatedGlobals$inboundSchema;
    /** @deprecated use `CreateWithMultipartUploadsV2DeprecatedGlobals$outboundSchema` instead. */
    export const outboundSchema = CreateWithMultipartUploadsV2DeprecatedGlobals$outboundSchema;
    /** @deprecated use `CreateWithMultipartUploadsV2DeprecatedGlobals$Outbound` instead. */
    export type Outbound = CreateWithMultipartUploadsV2DeprecatedGlobals$Outbound;
}

/** @internal */
export const CreateWithMultipartUploadsV2DeprecatedRequest$inboundSchema: z.ZodType<
    CreateWithMultipartUploadsV2DeprecatedRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        appId: z.string().optional(),
        CreateMultipartBuildParams: components.CreateMultipartBuildParams$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            CreateMultipartBuildParams: "createMultipartBuildParams",
        });
    });

/** @internal */
export type CreateWithMultipartUploadsV2DeprecatedRequest$Outbound = {
    appId?: string | undefined;
    CreateMultipartBuildParams: components.CreateMultipartBuildParams$Outbound;
};

/** @internal */
export const CreateWithMultipartUploadsV2DeprecatedRequest$outboundSchema: z.ZodType<
    CreateWithMultipartUploadsV2DeprecatedRequest$Outbound,
    z.ZodTypeDef,
    CreateWithMultipartUploadsV2DeprecatedRequest
> = z
    .object({
        appId: z.string().optional(),
        createMultipartBuildParams: components.CreateMultipartBuildParams$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            createMultipartBuildParams: "CreateMultipartBuildParams",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWithMultipartUploadsV2DeprecatedRequest$ {
    /** @deprecated use `CreateWithMultipartUploadsV2DeprecatedRequest$inboundSchema` instead. */
    export const inboundSchema = CreateWithMultipartUploadsV2DeprecatedRequest$inboundSchema;
    /** @deprecated use `CreateWithMultipartUploadsV2DeprecatedRequest$outboundSchema` instead. */
    export const outboundSchema = CreateWithMultipartUploadsV2DeprecatedRequest$outboundSchema;
    /** @deprecated use `CreateWithMultipartUploadsV2DeprecatedRequest$Outbound` instead. */
    export type Outbound = CreateWithMultipartUploadsV2DeprecatedRequest$Outbound;
}

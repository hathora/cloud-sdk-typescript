/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type GetMetricsGlobals = {
  appId?: string | undefined;
};

export type GetMetricsRequest = {
  appId?: string | undefined;
  processId: string;
  /**
   * Available metrics to query over time.
   */
  metrics?: Array<components.MetricName> | undefined;
  /**
   * Unix timestamp. Default is current time.
   */
  end?: number | undefined;
  /**
   * Unix timestamp. Default is -1 hour from `end`.
   */
  start?: number | undefined;
  step?: number | undefined;
};

/** @internal */
export const GetMetricsGlobals$inboundSchema: z.ZodType<
  GetMetricsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type GetMetricsGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const GetMetricsGlobals$outboundSchema: z.ZodType<
  GetMetricsGlobals$Outbound,
  z.ZodTypeDef,
  GetMetricsGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMetricsGlobals$ {
  /** @deprecated use `GetMetricsGlobals$inboundSchema` instead. */
  export const inboundSchema = GetMetricsGlobals$inboundSchema;
  /** @deprecated use `GetMetricsGlobals$outboundSchema` instead. */
  export const outboundSchema = GetMetricsGlobals$outboundSchema;
  /** @deprecated use `GetMetricsGlobals$Outbound` instead. */
  export type Outbound = GetMetricsGlobals$Outbound;
}

/** @internal */
export const GetMetricsRequest$inboundSchema: z.ZodType<
  GetMetricsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
  processId: z.string(),
  metrics: z.array(components.MetricName$inboundSchema).optional(),
  end: z.number().optional(),
  start: z.number().optional(),
  step: z.number().int().default(60),
});

/** @internal */
export type GetMetricsRequest$Outbound = {
  appId?: string | undefined;
  processId: string;
  metrics?: Array<string> | undefined;
  end?: number | undefined;
  start?: number | undefined;
  step: number;
};

/** @internal */
export const GetMetricsRequest$outboundSchema: z.ZodType<
  GetMetricsRequest$Outbound,
  z.ZodTypeDef,
  GetMetricsRequest
> = z.object({
  appId: z.string().optional(),
  processId: z.string(),
  metrics: z.array(components.MetricName$outboundSchema).optional(),
  end: z.number().optional(),
  start: z.number().optional(),
  step: z.number().int().default(60),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMetricsRequest$ {
  /** @deprecated use `GetMetricsRequest$inboundSchema` instead. */
  export const inboundSchema = GetMetricsRequest$inboundSchema;
  /** @deprecated use `GetMetricsRequest$outboundSchema` instead. */
  export const outboundSchema = GetMetricsRequest$outboundSchema;
  /** @deprecated use `GetMetricsRequest$Outbound` instead. */
  export type Outbound = GetMetricsRequest$Outbound;
}

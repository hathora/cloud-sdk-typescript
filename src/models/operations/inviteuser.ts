/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type InviteUserRequest = {
    orgId: string;
    createUserInvite: components.CreateUserInvite;
};

/** @internal */
export namespace InviteUserRequest$ {
    export const inboundSchema: z.ZodType<InviteUserRequest, z.ZodTypeDef, unknown> = z
        .object({
            orgId: z.string(),
            CreateUserInvite: components.CreateUserInvite$.inboundSchema,
        })
        .transform((v) => {
            return {
                orgId: v.orgId,
                createUserInvite: v.CreateUserInvite,
            };
        });

    export type Outbound = {
        orgId: string;
        CreateUserInvite: components.CreateUserInvite$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InviteUserRequest> = z
        .object({
            orgId: z.string(),
            createUserInvite: components.CreateUserInvite$.outboundSchema,
        })
        .transform((v) => {
            return {
                orgId: v.orgId,
                CreateUserInvite: v.createUserInvite,
            };
        });
}

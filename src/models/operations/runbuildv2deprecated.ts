/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { blobLikeSchema } from "../../types/blobs.js";

export type RunBuildV2DeprecatedGlobals = {
  appId?: string | undefined;
};

export type RunBuildV2DeprecatedFile = {
  fileName: string;
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer;
};

export type RunBuildV2DeprecatedRequestBody = {
  file?: RunBuildV2DeprecatedFile | Blob | undefined;
};

export type RunBuildV2DeprecatedRequest = {
  appId?: string | undefined;
  buildId: number;
  requestBody: RunBuildV2DeprecatedRequestBody;
};

/** @internal */
export const RunBuildV2DeprecatedGlobals$inboundSchema: z.ZodType<
  RunBuildV2DeprecatedGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type RunBuildV2DeprecatedGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const RunBuildV2DeprecatedGlobals$outboundSchema: z.ZodType<
  RunBuildV2DeprecatedGlobals$Outbound,
  z.ZodTypeDef,
  RunBuildV2DeprecatedGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunBuildV2DeprecatedGlobals$ {
  /** @deprecated use `RunBuildV2DeprecatedGlobals$inboundSchema` instead. */
  export const inboundSchema = RunBuildV2DeprecatedGlobals$inboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedGlobals$outboundSchema` instead. */
  export const outboundSchema = RunBuildV2DeprecatedGlobals$outboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedGlobals$Outbound` instead. */
  export type Outbound = RunBuildV2DeprecatedGlobals$Outbound;
}

/** @internal */
export const RunBuildV2DeprecatedFile$inboundSchema: z.ZodType<
  RunBuildV2DeprecatedFile,
  z.ZodTypeDef,
  unknown
> = z.object({
  fileName: z.string(),
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
  ]),
});

/** @internal */
export type RunBuildV2DeprecatedFile$Outbound = {
  fileName: string;
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer;
};

/** @internal */
export const RunBuildV2DeprecatedFile$outboundSchema: z.ZodType<
  RunBuildV2DeprecatedFile$Outbound,
  z.ZodTypeDef,
  RunBuildV2DeprecatedFile
> = z.object({
  fileName: z.string(),
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunBuildV2DeprecatedFile$ {
  /** @deprecated use `RunBuildV2DeprecatedFile$inboundSchema` instead. */
  export const inboundSchema = RunBuildV2DeprecatedFile$inboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedFile$outboundSchema` instead. */
  export const outboundSchema = RunBuildV2DeprecatedFile$outboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedFile$Outbound` instead. */
  export type Outbound = RunBuildV2DeprecatedFile$Outbound;
}

/** @internal */
export const RunBuildV2DeprecatedRequestBody$inboundSchema: z.ZodType<
  RunBuildV2DeprecatedRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  file: z.lazy(() => RunBuildV2DeprecatedFile$inboundSchema).optional(),
});

/** @internal */
export type RunBuildV2DeprecatedRequestBody$Outbound = {
  file?: RunBuildV2DeprecatedFile$Outbound | Blob | undefined;
};

/** @internal */
export const RunBuildV2DeprecatedRequestBody$outboundSchema: z.ZodType<
  RunBuildV2DeprecatedRequestBody$Outbound,
  z.ZodTypeDef,
  RunBuildV2DeprecatedRequestBody
> = z.object({
  file: z.lazy(() => RunBuildV2DeprecatedFile$outboundSchema).or(blobLikeSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunBuildV2DeprecatedRequestBody$ {
  /** @deprecated use `RunBuildV2DeprecatedRequestBody$inboundSchema` instead. */
  export const inboundSchema = RunBuildV2DeprecatedRequestBody$inboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedRequestBody$outboundSchema` instead. */
  export const outboundSchema = RunBuildV2DeprecatedRequestBody$outboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedRequestBody$Outbound` instead. */
  export type Outbound = RunBuildV2DeprecatedRequestBody$Outbound;
}

/** @internal */
export const RunBuildV2DeprecatedRequest$inboundSchema: z.ZodType<
  RunBuildV2DeprecatedRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
  buildId: z.number().int(),
  RequestBody: z.lazy(() => RunBuildV2DeprecatedRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type RunBuildV2DeprecatedRequest$Outbound = {
  appId?: string | undefined;
  buildId: number;
  RequestBody: RunBuildV2DeprecatedRequestBody$Outbound;
};

/** @internal */
export const RunBuildV2DeprecatedRequest$outboundSchema: z.ZodType<
  RunBuildV2DeprecatedRequest$Outbound,
  z.ZodTypeDef,
  RunBuildV2DeprecatedRequest
> = z.object({
  appId: z.string().optional(),
  buildId: z.number().int(),
  requestBody: z.lazy(() => RunBuildV2DeprecatedRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunBuildV2DeprecatedRequest$ {
  /** @deprecated use `RunBuildV2DeprecatedRequest$inboundSchema` instead. */
  export const inboundSchema = RunBuildV2DeprecatedRequest$inboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedRequest$outboundSchema` instead. */
  export const outboundSchema = RunBuildV2DeprecatedRequest$outboundSchema;
  /** @deprecated use `RunBuildV2DeprecatedRequest$Outbound` instead. */
  export type Outbound = RunBuildV2DeprecatedRequest$Outbound;
}

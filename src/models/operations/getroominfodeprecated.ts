/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetRoomInfoDeprecatedGlobals = {
  appId?: string | undefined;
};

export type GetRoomInfoDeprecatedRequest = {
  appId?: string | undefined;
  roomId: string;
};

/** @internal */
export const GetRoomInfoDeprecatedGlobals$inboundSchema: z.ZodType<
  GetRoomInfoDeprecatedGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type GetRoomInfoDeprecatedGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const GetRoomInfoDeprecatedGlobals$outboundSchema: z.ZodType<
  GetRoomInfoDeprecatedGlobals$Outbound,
  z.ZodTypeDef,
  GetRoomInfoDeprecatedGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRoomInfoDeprecatedGlobals$ {
  /** @deprecated use `GetRoomInfoDeprecatedGlobals$inboundSchema` instead. */
  export const inboundSchema = GetRoomInfoDeprecatedGlobals$inboundSchema;
  /** @deprecated use `GetRoomInfoDeprecatedGlobals$outboundSchema` instead. */
  export const outboundSchema = GetRoomInfoDeprecatedGlobals$outboundSchema;
  /** @deprecated use `GetRoomInfoDeprecatedGlobals$Outbound` instead. */
  export type Outbound = GetRoomInfoDeprecatedGlobals$Outbound;
}

export function getRoomInfoDeprecatedGlobalsToJSON(
  getRoomInfoDeprecatedGlobals: GetRoomInfoDeprecatedGlobals,
): string {
  return JSON.stringify(
    GetRoomInfoDeprecatedGlobals$outboundSchema.parse(
      getRoomInfoDeprecatedGlobals,
    ),
  );
}

export function getRoomInfoDeprecatedGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<GetRoomInfoDeprecatedGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRoomInfoDeprecatedGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRoomInfoDeprecatedGlobals' from JSON`,
  );
}

/** @internal */
export const GetRoomInfoDeprecatedRequest$inboundSchema: z.ZodType<
  GetRoomInfoDeprecatedRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
  roomId: z.string(),
});

/** @internal */
export type GetRoomInfoDeprecatedRequest$Outbound = {
  appId?: string | undefined;
  roomId: string;
};

/** @internal */
export const GetRoomInfoDeprecatedRequest$outboundSchema: z.ZodType<
  GetRoomInfoDeprecatedRequest$Outbound,
  z.ZodTypeDef,
  GetRoomInfoDeprecatedRequest
> = z.object({
  appId: z.string().optional(),
  roomId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRoomInfoDeprecatedRequest$ {
  /** @deprecated use `GetRoomInfoDeprecatedRequest$inboundSchema` instead. */
  export const inboundSchema = GetRoomInfoDeprecatedRequest$inboundSchema;
  /** @deprecated use `GetRoomInfoDeprecatedRequest$outboundSchema` instead. */
  export const outboundSchema = GetRoomInfoDeprecatedRequest$outboundSchema;
  /** @deprecated use `GetRoomInfoDeprecatedRequest$Outbound` instead. */
  export type Outbound = GetRoomInfoDeprecatedRequest$Outbound;
}

export function getRoomInfoDeprecatedRequestToJSON(
  getRoomInfoDeprecatedRequest: GetRoomInfoDeprecatedRequest,
): string {
  return JSON.stringify(
    GetRoomInfoDeprecatedRequest$outboundSchema.parse(
      getRoomInfoDeprecatedRequest,
    ),
  );
}

export function getRoomInfoDeprecatedRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetRoomInfoDeprecatedRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRoomInfoDeprecatedRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRoomInfoDeprecatedRequest' from JSON`,
  );
}

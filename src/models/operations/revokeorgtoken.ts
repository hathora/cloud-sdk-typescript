/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RevokeOrgTokenRequest = {
    orgId: string;
    orgTokenId: string;
};

/** @internal */
export namespace RevokeOrgTokenRequest$ {
    export const inboundSchema: z.ZodType<RevokeOrgTokenRequest, z.ZodTypeDef, unknown> = z
        .object({
            orgId: z.string(),
            orgTokenId: z.string(),
        })
        .transform((v) => {
            return {
                orgId: v.orgId,
                orgTokenId: v.orgTokenId,
            };
        });

    export type Outbound = {
        orgId: string;
        orgTokenId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RevokeOrgTokenRequest> = z
        .object({
            orgId: z.string(),
            orgTokenId: z.string(),
        })
        .transform((v) => {
            return {
                orgId: v.orgId,
                orgTokenId: v.orgTokenId,
            };
        });
}

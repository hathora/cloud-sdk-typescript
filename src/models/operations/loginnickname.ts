/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type LoginNicknameGlobals = {
    appId?: string | undefined;
};

export type LoginNicknameRequest = {
    appId?: string | undefined;
    nicknameObject: components.NicknameObject;
};

/** @internal */
export namespace LoginNicknameGlobals$ {
    export const inboundSchema: z.ZodType<LoginNicknameGlobals, z.ZodTypeDef, unknown> = z.object({
        appId: z.string().optional(),
    });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LoginNicknameGlobals> = z.object(
        {
            appId: z.string().optional(),
        }
    );
}

/** @internal */
export namespace LoginNicknameRequest$ {
    export const inboundSchema: z.ZodType<LoginNicknameRequest, z.ZodTypeDef, unknown> = z
        .object({
            appId: z.string().optional(),
            NicknameObject: components.NicknameObject$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                NicknameObject: "nicknameObject",
            });
        });

    export type Outbound = {
        appId?: string | undefined;
        NicknameObject: components.NicknameObject$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LoginNicknameRequest> = z
        .object({
            appId: z.string().optional(),
            nicknameObject: components.NicknameObject$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                nicknameObject: "NicknameObject",
            });
        });
}

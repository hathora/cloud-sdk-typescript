/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetProcessInfoGlobals = {
    appId?: string | undefined;
};

export type GetProcessInfoRequest = {
    appId?: string | undefined;
    processId: string;
};

/** @internal */
export namespace GetProcessInfoGlobals$ {
    export const inboundSchema: z.ZodType<GetProcessInfoGlobals, z.ZodTypeDef, unknown> = z.object({
        appId: z.string().optional(),
    });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProcessInfoGlobals> =
        z.object({
            appId: z.string().optional(),
        });
}

/** @internal */
export namespace GetProcessInfoRequest$ {
    export const inboundSchema: z.ZodType<GetProcessInfoRequest, z.ZodTypeDef, unknown> = z.object({
        appId: z.string().optional(),
        processId: z.string(),
    });

    export type Outbound = {
        appId?: string | undefined;
        processId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProcessInfoRequest> =
        z.object({
            appId: z.string().optional(),
            processId: z.string(),
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type CreateBuildGlobals = {
    appId?: string | undefined;
};

export type CreateBuildRequest = {
    appId?: string | undefined;
    createBuildParams: components.CreateBuildParams;
};

/** @internal */
export namespace CreateBuildGlobals$ {
    export const inboundSchema: z.ZodType<CreateBuildGlobals, z.ZodTypeDef, unknown> = z.object({
        appId: z.string().optional(),
    });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateBuildGlobals> = z.object({
        appId: z.string().optional(),
    });
}

/** @internal */
export namespace CreateBuildRequest$ {
    export const inboundSchema: z.ZodType<CreateBuildRequest, z.ZodTypeDef, unknown> = z
        .object({
            appId: z.string().optional(),
            CreateBuildParams: components.CreateBuildParams$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                CreateBuildParams: "createBuildParams",
            });
        });

    export type Outbound = {
        appId?: string | undefined;
        CreateBuildParams: components.CreateBuildParams$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateBuildRequest> = z
        .object({
            appId: z.string().optional(),
            createBuildParams: components.CreateBuildParams$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                createBuildParams: "CreateBuildParams",
            });
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ListActivePublicLobbiesRequest = {
    appId?: string | undefined;
    /**
     * If omitted, active public lobbies in all regions will be returned.
     */
    region?: components.Region | undefined;
};

/** @internal */
export namespace ListActivePublicLobbiesRequest$ {
    export type Inbound = {
        appId?: string | undefined;
        region?: components.Region | undefined;
    };

    export const inboundSchema: z.ZodType<ListActivePublicLobbiesRequest, z.ZodTypeDef, Inbound> = z
        .object({
            appId: z.string().optional(),
            region: components.Region$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                ...(v.region === undefined ? null : { region: v.region }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
        region?: components.Region | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListActivePublicLobbiesRequest> =
        z
            .object({
                appId: z.string().optional(),
                region: components.Region$.optional(),
            })
            .transform((v) => {
                return {
                    ...(v.appId === undefined ? null : { appId: v.appId }),
                    ...(v.region === undefined ? null : { region: v.region }),
                };
            });
}

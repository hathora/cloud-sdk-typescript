/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateBuildV2DeprecatedGlobals = {
  appId?: string | undefined;
};

export type CreateBuildV2DeprecatedRequest = {
  appId?: string | undefined;
  createBuildParams: components.CreateBuildParams;
};

/** @internal */
export const CreateBuildV2DeprecatedGlobals$inboundSchema: z.ZodType<
  CreateBuildV2DeprecatedGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
});

/** @internal */
export type CreateBuildV2DeprecatedGlobals$Outbound = {
  appId?: string | undefined;
};

/** @internal */
export const CreateBuildV2DeprecatedGlobals$outboundSchema: z.ZodType<
  CreateBuildV2DeprecatedGlobals$Outbound,
  z.ZodTypeDef,
  CreateBuildV2DeprecatedGlobals
> = z.object({
  appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBuildV2DeprecatedGlobals$ {
  /** @deprecated use `CreateBuildV2DeprecatedGlobals$inboundSchema` instead. */
  export const inboundSchema = CreateBuildV2DeprecatedGlobals$inboundSchema;
  /** @deprecated use `CreateBuildV2DeprecatedGlobals$outboundSchema` instead. */
  export const outboundSchema = CreateBuildV2DeprecatedGlobals$outboundSchema;
  /** @deprecated use `CreateBuildV2DeprecatedGlobals$Outbound` instead. */
  export type Outbound = CreateBuildV2DeprecatedGlobals$Outbound;
}

export function createBuildV2DeprecatedGlobalsToJSON(
  createBuildV2DeprecatedGlobals: CreateBuildV2DeprecatedGlobals,
): string {
  return JSON.stringify(
    CreateBuildV2DeprecatedGlobals$outboundSchema.parse(
      createBuildV2DeprecatedGlobals,
    ),
  );
}

export function createBuildV2DeprecatedGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<CreateBuildV2DeprecatedGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateBuildV2DeprecatedGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateBuildV2DeprecatedGlobals' from JSON`,
  );
}

/** @internal */
export const CreateBuildV2DeprecatedRequest$inboundSchema: z.ZodType<
  CreateBuildV2DeprecatedRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.string().optional(),
  CreateBuildParams: components.CreateBuildParams$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "CreateBuildParams": "createBuildParams",
  });
});

/** @internal */
export type CreateBuildV2DeprecatedRequest$Outbound = {
  appId?: string | undefined;
  CreateBuildParams: components.CreateBuildParams$Outbound;
};

/** @internal */
export const CreateBuildV2DeprecatedRequest$outboundSchema: z.ZodType<
  CreateBuildV2DeprecatedRequest$Outbound,
  z.ZodTypeDef,
  CreateBuildV2DeprecatedRequest
> = z.object({
  appId: z.string().optional(),
  createBuildParams: components.CreateBuildParams$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    createBuildParams: "CreateBuildParams",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBuildV2DeprecatedRequest$ {
  /** @deprecated use `CreateBuildV2DeprecatedRequest$inboundSchema` instead. */
  export const inboundSchema = CreateBuildV2DeprecatedRequest$inboundSchema;
  /** @deprecated use `CreateBuildV2DeprecatedRequest$outboundSchema` instead. */
  export const outboundSchema = CreateBuildV2DeprecatedRequest$outboundSchema;
  /** @deprecated use `CreateBuildV2DeprecatedRequest$Outbound` instead. */
  export type Outbound = CreateBuildV2DeprecatedRequest$Outbound;
}

export function createBuildV2DeprecatedRequestToJSON(
  createBuildV2DeprecatedRequest: CreateBuildV2DeprecatedRequest,
): string {
  return JSON.stringify(
    CreateBuildV2DeprecatedRequest$outboundSchema.parse(
      createBuildV2DeprecatedRequest,
    ),
  );
}

export function createBuildV2DeprecatedRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateBuildV2DeprecatedRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateBuildV2DeprecatedRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateBuildV2DeprecatedRequest' from JSON`,
  );
}

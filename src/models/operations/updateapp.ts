/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateAppGlobals = {
    appId?: string | undefined;
};

export type UpdateAppRequest = {
    appId?: string | undefined;
    appConfig: components.AppConfig;
};

/** @internal */
export namespace UpdateAppGlobals$ {
    export const inboundSchema: z.ZodType<UpdateAppGlobals, z.ZodTypeDef, unknown> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateAppGlobals> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace UpdateAppRequest$ {
    export const inboundSchema: z.ZodType<UpdateAppRequest, z.ZodTypeDef, unknown> = z
        .object({
            appId: z.string().optional(),
            AppConfig: components.AppConfig$.inboundSchema,
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                appConfig: v.AppConfig,
            };
        });

    export type Outbound = {
        appId?: string | undefined;
        AppConfig: components.AppConfig$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateAppRequest> = z
        .object({
            appId: z.string().optional(),
            appConfig: components.AppConfig$.outboundSchema,
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                AppConfig: v.appConfig,
            };
        });
}

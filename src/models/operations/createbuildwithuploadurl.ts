/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateBuildWithUploadUrlGlobals = {
    appId?: string | undefined;
};

export type CreateBuildWithUploadUrlRequest = {
    appId?: string | undefined;
    createBuildParams: components.CreateBuildParams;
};

/** @internal */
export const CreateBuildWithUploadUrlGlobals$inboundSchema: z.ZodType<
    CreateBuildWithUploadUrlGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    appId: z.string().optional(),
});

/** @internal */
export type CreateBuildWithUploadUrlGlobals$Outbound = {
    appId?: string | undefined;
};

/** @internal */
export const CreateBuildWithUploadUrlGlobals$outboundSchema: z.ZodType<
    CreateBuildWithUploadUrlGlobals$Outbound,
    z.ZodTypeDef,
    CreateBuildWithUploadUrlGlobals
> = z.object({
    appId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBuildWithUploadUrlGlobals$ {
    /** @deprecated use `CreateBuildWithUploadUrlGlobals$inboundSchema` instead. */
    export const inboundSchema = CreateBuildWithUploadUrlGlobals$inboundSchema;
    /** @deprecated use `CreateBuildWithUploadUrlGlobals$outboundSchema` instead. */
    export const outboundSchema = CreateBuildWithUploadUrlGlobals$outboundSchema;
    /** @deprecated use `CreateBuildWithUploadUrlGlobals$Outbound` instead. */
    export type Outbound = CreateBuildWithUploadUrlGlobals$Outbound;
}

/** @internal */
export const CreateBuildWithUploadUrlRequest$inboundSchema: z.ZodType<
    CreateBuildWithUploadUrlRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        appId: z.string().optional(),
        CreateBuildParams: components.CreateBuildParams$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            CreateBuildParams: "createBuildParams",
        });
    });

/** @internal */
export type CreateBuildWithUploadUrlRequest$Outbound = {
    appId?: string | undefined;
    CreateBuildParams: components.CreateBuildParams$Outbound;
};

/** @internal */
export const CreateBuildWithUploadUrlRequest$outboundSchema: z.ZodType<
    CreateBuildWithUploadUrlRequest$Outbound,
    z.ZodTypeDef,
    CreateBuildWithUploadUrlRequest
> = z
    .object({
        appId: z.string().optional(),
        createBuildParams: components.CreateBuildParams$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            createBuildParams: "CreateBuildParams",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBuildWithUploadUrlRequest$ {
    /** @deprecated use `CreateBuildWithUploadUrlRequest$inboundSchema` instead. */
    export const inboundSchema = CreateBuildWithUploadUrlRequest$inboundSchema;
    /** @deprecated use `CreateBuildWithUploadUrlRequest$outboundSchema` instead. */
    export const outboundSchema = CreateBuildWithUploadUrlRequest$outboundSchema;
    /** @deprecated use `CreateBuildWithUploadUrlRequest$Outbound` instead. */
    export type Outbound = CreateBuildWithUploadUrlRequest$Outbound;
}

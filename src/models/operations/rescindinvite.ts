/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type RescindInviteRequest = {
    orgId: string;
    rescindUserInvite: components.RescindUserInvite;
};

/** @internal */
export const RescindInviteRequest$inboundSchema: z.ZodType<
    RescindInviteRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        orgId: z.string(),
        RescindUserInvite: components.RescindUserInvite$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            RescindUserInvite: "rescindUserInvite",
        });
    });

/** @internal */
export type RescindInviteRequest$Outbound = {
    orgId: string;
    RescindUserInvite: components.RescindUserInvite$Outbound;
};

/** @internal */
export const RescindInviteRequest$outboundSchema: z.ZodType<
    RescindInviteRequest$Outbound,
    z.ZodTypeDef,
    RescindInviteRequest
> = z
    .object({
        orgId: z.string(),
        rescindUserInvite: components.RescindUserInvite$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            rescindUserInvite: "RescindUserInvite",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RescindInviteRequest$ {
    /** @deprecated use `RescindInviteRequest$inboundSchema` instead. */
    export const inboundSchema = RescindInviteRequest$inboundSchema;
    /** @deprecated use `RescindInviteRequest$outboundSchema` instead. */
    export const outboundSchema = RescindInviteRequest$outboundSchema;
    /** @deprecated use `RescindInviteRequest$Outbound` instead. */
    export type Outbound = RescindInviteRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateOrgTokenRequest = {
    orgId: string;
    createOrgToken: components.CreateOrgToken;
};

/** @internal */
export namespace CreateOrgTokenRequest$ {
    export const inboundSchema: z.ZodType<CreateOrgTokenRequest, z.ZodTypeDef, unknown> = z
        .object({
            orgId: z.string(),
            CreateOrgToken: z.lazy(() => components.CreateOrgToken$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                CreateOrgToken: "createOrgToken",
            });
        });

    export type Outbound = {
        orgId: string;
        CreateOrgToken: components.CreateOrgToken$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrgTokenRequest> = z
        .object({
            orgId: z.string(),
            createOrgToken: z.lazy(() => components.CreateOrgToken$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                createOrgToken: "CreateOrgToken",
            });
        });
}

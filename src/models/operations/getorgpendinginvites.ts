/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetOrgPendingInvitesRequest = {
  orgId: string;
};

/** @internal */
export const GetOrgPendingInvitesRequest$inboundSchema: z.ZodType<
  GetOrgPendingInvitesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  orgId: z.string(),
});

/** @internal */
export type GetOrgPendingInvitesRequest$Outbound = {
  orgId: string;
};

/** @internal */
export const GetOrgPendingInvitesRequest$outboundSchema: z.ZodType<
  GetOrgPendingInvitesRequest$Outbound,
  z.ZodTypeDef,
  GetOrgPendingInvitesRequest
> = z.object({
  orgId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrgPendingInvitesRequest$ {
  /** @deprecated use `GetOrgPendingInvitesRequest$inboundSchema` instead. */
  export const inboundSchema = GetOrgPendingInvitesRequest$inboundSchema;
  /** @deprecated use `GetOrgPendingInvitesRequest$outboundSchema` instead. */
  export const outboundSchema = GetOrgPendingInvitesRequest$outboundSchema;
  /** @deprecated use `GetOrgPendingInvitesRequest$Outbound` instead. */
  export type Outbound = GetOrgPendingInvitesRequest$Outbound;
}

export function getOrgPendingInvitesRequestToJSON(
  getOrgPendingInvitesRequest: GetOrgPendingInvitesRequest,
): string {
  return JSON.stringify(
    GetOrgPendingInvitesRequest$outboundSchema.parse(
      getOrgPendingInvitesRequest,
    ),
  );
}

export function getOrgPendingInvitesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetOrgPendingInvitesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOrgPendingInvitesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOrgPendingInvitesRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetBuildInfoDeprecatedRequest = {
    buildId: number;
    appId?: string | undefined;
};

/** @internal */
export namespace GetBuildInfoDeprecatedRequest$ {
    export type Inbound = {
        buildId: number;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetBuildInfoDeprecatedRequest, z.ZodTypeDef, Inbound> = z
        .object({
            buildId: z.number().int(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                buildId: v.buildId,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        buildId: number;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetBuildInfoDeprecatedRequest> =
        z
            .object({
                buildId: z.number().int(),
                appId: z.string().optional(),
            })
            .transform((v) => {
                return {
                    buildId: v.buildId,
                    ...(v.appId === undefined ? null : { appId: v.appId }),
                };
            });
}

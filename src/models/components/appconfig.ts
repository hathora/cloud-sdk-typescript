/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AuthConfiguration, AuthConfiguration$ } from "./authconfiguration";
import * as z from "zod";

export type AppConfig = {
    /**
     * Configure [player authentication](https://hathora.dev/docs/lobbies-and-matchmaking/auth-service) for your application. Use Hathora's built-in auth providers or use your own [custom authentication](https://hathora.dev/docs/lobbies-and-matchmaking/auth-service#custom-auth-provider).
     */
    authConfiguration: AuthConfiguration;
    /**
     * Readable name for an application. Must be unique within an organization.
     */
    appName: string;
};

/** @internal */
export namespace AppConfig$ {
    export type Inbound = {
        authConfiguration: AuthConfiguration$.Inbound;
        appName: string;
    };

    export const inboundSchema: z.ZodType<AppConfig, z.ZodTypeDef, Inbound> = z
        .object({
            authConfiguration: AuthConfiguration$.inboundSchema,
            appName: z.string(),
        })
        .transform((v) => {
            return {
                authConfiguration: v.authConfiguration,
                appName: v.appName,
            };
        });

    export type Outbound = {
        authConfiguration: AuthConfiguration$.Outbound;
        appName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppConfig> = z
        .object({
            authConfiguration: AuthConfiguration$.outboundSchema,
            appName: z.string(),
        })
        .transform((v) => {
            return {
                authConfiguration: v.authConfiguration,
                appName: v.appName,
            };
        });
}

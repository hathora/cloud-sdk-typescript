/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

export const OrgTokenStatus = {
    Active: "active",
    Revoked: "revoked",
} as const;
export type OrgTokenStatus = OpenEnum<typeof OrgTokenStatus>;

/** @internal */
export namespace OrgTokenStatus$ {
    export const inboundSchema: z.ZodType<OrgTokenStatus, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(OrgTokenStatus),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(OrgTokenStatus),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

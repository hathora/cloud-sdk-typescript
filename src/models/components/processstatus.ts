/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

export const ProcessStatus = {
    Starting: "starting",
    Running: "running",
    Draining: "draining",
    Stopping: "stopping",
    Stopped: "stopped",
    Failed: "failed",
} as const;
export type ProcessStatus = OpenEnum<typeof ProcessStatus>;

/** @internal */
export namespace ProcessStatus$ {
    export const inboundSchema: z.ZodType<ProcessStatus, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(ProcessStatus),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(ProcessStatus),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

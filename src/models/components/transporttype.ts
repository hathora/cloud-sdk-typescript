/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

/**
 * Transport type specifies the underlying communication protocol to the exposed port.
 */
export const TransportType = {
    Tcp: "tcp",
    Udp: "udp",
    Tls: "tls",
} as const;
/**
 * Transport type specifies the underlying communication protocol to the exposed port.
 */
export type TransportType = OpenEnum<typeof TransportType>;

/** @internal */
export namespace TransportType$ {
    export const inboundSchema: z.ZodType<TransportType, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(TransportType),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(TransportType),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

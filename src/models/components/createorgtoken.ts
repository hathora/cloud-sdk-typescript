/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateOrgToken = {
    /**
     * Readable name for a token. Must be unique within an organization.
     */
    name: string;
};

/** @internal */
export const CreateOrgToken$inboundSchema: z.ZodType<CreateOrgToken, z.ZodTypeDef, unknown> =
    z.object({
        name: z.string(),
    });

/** @internal */
export type CreateOrgToken$Outbound = {
    name: string;
};

/** @internal */
export const CreateOrgToken$outboundSchema: z.ZodType<
    CreateOrgToken$Outbound,
    z.ZodTypeDef,
    CreateOrgToken
> = z.object({
    name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateOrgToken$ {
    /** @deprecated use `CreateOrgToken$inboundSchema` instead. */
    export const inboundSchema = CreateOrgToken$inboundSchema;
    /** @deprecated use `CreateOrgToken$outboundSchema` instead. */
    export const outboundSchema = CreateOrgToken$outboundSchema;
    /** @deprecated use `CreateOrgToken$Outbound` instead. */
    export type Outbound = CreateOrgToken$Outbound;
}

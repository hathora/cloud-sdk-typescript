/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types/enums.js";
import * as z from "zod";

/**
 * Types of lobbies a player can create.
 *
 * @remarks
 *
 * `private`: the player who created the room must share the roomId with their friends
 *
 * `public`: visible in the public lobby list, anyone can join
 *
 * `local`: for testing with a server running locally
 */
export const LobbyVisibility = {
    Private: "private",
    Public: "public",
    Local: "local",
} as const;
/**
 * Types of lobbies a player can create.
 *
 * @remarks
 *
 * `private`: the player who created the room must share the roomId with their friends
 *
 * `public`: visible in the public lobby list, anyone can join
 *
 * `local`: for testing with a server running locally
 */
export type LobbyVisibility = OpenEnum<typeof LobbyVisibility>;

/** @internal */
export const LobbyVisibility$inboundSchema: z.ZodType<LobbyVisibility, z.ZodTypeDef, unknown> =
    z.union([z.nativeEnum(LobbyVisibility), z.string().transform(catchUnrecognizedEnum)]);

/** @internal */
export const LobbyVisibility$outboundSchema: z.ZodType<
    LobbyVisibility,
    z.ZodTypeDef,
    LobbyVisibility
> = z.union([z.nativeEnum(LobbyVisibility), z.string().and(z.custom<Unrecognized<string>>())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LobbyVisibility$ {
    /** @deprecated use `LobbyVisibility$inboundSchema` instead. */
    export const inboundSchema = LobbyVisibility$inboundSchema;
    /** @deprecated use `LobbyVisibility$outboundSchema` instead. */
    export const outboundSchema = LobbyVisibility$outboundSchema;
}

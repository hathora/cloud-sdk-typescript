/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

/**
 * Types of lobbies a player can create.
 *
 * @remarks
 *
 * `private`: the player who created the room must share the roomId with their friends
 *
 * `public`: visible in the public lobby list, anyone can join
 *
 * `local`: for testing with a server running locally
 */
export const LobbyVisibility = {
    Private: "private",
    Public: "public",
    Local: "local",
} as const;
/**
 * Types of lobbies a player can create.
 *
 * @remarks
 *
 * `private`: the player who created the room must share the roomId with their friends
 *
 * `public`: visible in the public lobby list, anyone can join
 *
 * `local`: for testing with a server running locally
 */
export type LobbyVisibility = OpenEnum<typeof LobbyVisibility>;

/** @internal */
export namespace LobbyVisibility$ {
    export const inboundSchema: z.ZodType<LobbyVisibility, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(LobbyVisibility),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(LobbyVisibility),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

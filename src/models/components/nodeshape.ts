/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const NodeShape = {
  Cpu48: "cpu-4-8",
  Cpu816: "cpu-8-16",
  Cpu1632: "cpu-16-32",
  Cpu3264: "cpu-32-64",
  Cpu64128: "cpu-64-128",
  Cpu416: "cpu-4-16",
  Cpu832: "cpu-8-32",
  Cpu1664: "cpu-16-64",
  Cpu32128: "cpu-32-128",
  GpuL41416: "gpu-l4-1-4-16",
  GpuL411248: "gpu-l4-1-12-48",
  GpuL422496: "gpu-l4-2-24-96",
  GpuL4448192: "gpu-l4-4-48-192",
  GpuL4896384: "gpu-l4-8-96-384",
  GpuH100126234: "gpu-h100-1-26-234",
  GpuH100252468: "gpu-h100-2-52-468",
  GpuH1004104936: "gpu-h100-4-104-936",
  GpuH10082081872: "gpu-h100-8-208-1872",
  GpuH100128180: "gpu-h100-1-28-180",
  GpuH100260360: "gpu-h100-2-60-360",
  GpuH1004124720: "gpu-h100-4-124-720",
  GpuH10082521440: "gpu-h100-8-252-1440",
} as const;
export type NodeShape = OpenEnum<typeof NodeShape>;

/** @internal */
export const NodeShape$inboundSchema: z.ZodType<
  NodeShape,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(NodeShape),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const NodeShape$outboundSchema: z.ZodType<
  NodeShape,
  z.ZodTypeDef,
  NodeShape
> = z.union([
  z.nativeEnum(NodeShape),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NodeShape$ {
  /** @deprecated use `NodeShape$inboundSchema` instead. */
  export const inboundSchema = NodeShape$inboundSchema;
  /** @deprecated use `NodeShape$outboundSchema` instead. */
  export const outboundSchema = NodeShape$outboundSchema;
}

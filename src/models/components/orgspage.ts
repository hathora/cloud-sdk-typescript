/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Organization, Organization$ } from "./organization";
import * as z from "zod";

export type OrgsPage = {
    orgs: Array<Organization>;
};

/** @internal */
export namespace OrgsPage$ {
    export const inboundSchema: z.ZodType<OrgsPage, z.ZodTypeDef, unknown> = z
        .object({
            orgs: z.array(Organization$.inboundSchema),
        })
        .transform((v) => {
            return {
                orgs: v.orgs,
            };
        });

    export type Outbound = {
        orgs: Array<Organization$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OrgsPage> = z
        .object({
            orgs: z.array(Organization$.outboundSchema),
        })
        .transform((v) => {
            return {
                orgs: v.orgs,
            };
        });
}

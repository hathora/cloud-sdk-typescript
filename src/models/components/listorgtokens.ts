/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { OrgToken, OrgToken$ } from "./orgtoken";
import * as z from "zod";

export type ListOrgTokens = {
    tokens: Array<OrgToken>;
};

/** @internal */
export namespace ListOrgTokens$ {
    export type Inbound = {
        tokens: Array<OrgToken$.Inbound>;
    };

    export const inboundSchema: z.ZodType<ListOrgTokens, z.ZodTypeDef, Inbound> = z
        .object({
            tokens: z.array(OrgToken$.inboundSchema),
        })
        .transform((v) => {
            return {
                tokens: v.tokens,
            };
        });

    export type Outbound = {
        tokens: Array<OrgToken$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListOrgTokens> = z
        .object({
            tokens: z.array(OrgToken$.outboundSchema),
        })
        .transform((v) => {
            return {
                tokens: v.tokens,
            };
        });
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    OrgToken,
    OrgToken$inboundSchema,
    OrgToken$Outbound,
    OrgToken$outboundSchema,
} from "./orgtoken.js";
import * as z from "zod";

export type ListOrgTokens = {
    tokens: Array<OrgToken>;
};

/** @internal */
export const ListOrgTokens$inboundSchema: z.ZodType<ListOrgTokens, z.ZodTypeDef, unknown> =
    z.object({
        tokens: z.array(OrgToken$inboundSchema),
    });

/** @internal */
export type ListOrgTokens$Outbound = {
    tokens: Array<OrgToken$Outbound>;
};

/** @internal */
export const ListOrgTokens$outboundSchema: z.ZodType<
    ListOrgTokens$Outbound,
    z.ZodTypeDef,
    ListOrgTokens
> = z.object({
    tokens: z.array(OrgToken$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListOrgTokens$ {
    /** @deprecated use `ListOrgTokens$inboundSchema` instead. */
    export const inboundSchema = ListOrgTokens$inboundSchema;
    /** @deprecated use `ListOrgTokens$outboundSchema` instead. */
    export const outboundSchema = ListOrgTokens$outboundSchema;
    /** @deprecated use `ListOrgTokens$Outbound` instead. */
    export type Outbound = ListOrgTokens$Outbound;
}

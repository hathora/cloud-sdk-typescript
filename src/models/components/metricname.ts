/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

/**
 * Available metrics to query over time.
 */
export const MetricName = {
    Cpu: "cpu",
    Memory: "memory",
    RateEgress: "rate_egress",
    TotalEgress: "total_egress",
    ActiveConnections: "active_connections",
} as const;
/**
 * Available metrics to query over time.
 */
export type MetricName = OpenEnum<typeof MetricName>;

/** @internal */
export namespace MetricName$ {
    export const inboundSchema: z.ZodType<MetricName, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(MetricName),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema = z.union([
        z.nativeEnum(MetricName),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  OrgMember,
  OrgMember$inboundSchema,
  OrgMember$Outbound,
  OrgMember$outboundSchema,
} from "./orgmember.js";

export type OrgMembersPage = {
  members: Array<OrgMember>;
};

/** @internal */
export const OrgMembersPage$inboundSchema: z.ZodType<
  OrgMembersPage,
  z.ZodTypeDef,
  unknown
> = z.object({
  members: z.array(OrgMember$inboundSchema),
});

/** @internal */
export type OrgMembersPage$Outbound = {
  members: Array<OrgMember$Outbound>;
};

/** @internal */
export const OrgMembersPage$outboundSchema: z.ZodType<
  OrgMembersPage$Outbound,
  z.ZodTypeDef,
  OrgMembersPage
> = z.object({
  members: z.array(OrgMember$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrgMembersPage$ {
  /** @deprecated use `OrgMembersPage$inboundSchema` instead. */
  export const inboundSchema = OrgMembersPage$inboundSchema;
  /** @deprecated use `OrgMembersPage$outboundSchema` instead. */
  export const outboundSchema = OrgMembersPage$outboundSchema;
  /** @deprecated use `OrgMembersPage$Outbound` instead. */
  export type Outbound = OrgMembersPage$Outbound;
}

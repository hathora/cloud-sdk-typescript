/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types/enums.js";
import * as z from "zod";

export const InvoiceStatus = {
    Pending: "pending",
    Paid: "paid",
    Overdue: "overdue",
} as const;
export type InvoiceStatus = OpenEnum<typeof InvoiceStatus>;

/** @internal */
export namespace InvoiceStatus$ {
    export const inboundSchema: z.ZodType<InvoiceStatus, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(InvoiceStatus),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema: z.ZodType<InvoiceStatus, z.ZodTypeDef, InvoiceStatus> = z.union([
        z.nativeEnum(InvoiceStatus),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

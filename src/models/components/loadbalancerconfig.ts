/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LoadBalancerConfig = {
  /**
   * Whether load balancing is enabled for this application.
   */
  enabled: boolean;
};

/** @internal */
export const LoadBalancerConfig$inboundSchema: z.ZodType<
  LoadBalancerConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
});

/** @internal */
export type LoadBalancerConfig$Outbound = {
  enabled: boolean;
};

/** @internal */
export const LoadBalancerConfig$outboundSchema: z.ZodType<
  LoadBalancerConfig$Outbound,
  z.ZodTypeDef,
  LoadBalancerConfig
> = z.object({
  enabled: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LoadBalancerConfig$ {
  /** @deprecated use `LoadBalancerConfig$inboundSchema` instead. */
  export const inboundSchema = LoadBalancerConfig$inboundSchema;
  /** @deprecated use `LoadBalancerConfig$outboundSchema` instead. */
  export const outboundSchema = LoadBalancerConfig$outboundSchema;
  /** @deprecated use `LoadBalancerConfig$Outbound` instead. */
  export type Outbound = LoadBalancerConfig$Outbound;
}

export function loadBalancerConfigToJSON(
  loadBalancerConfig: LoadBalancerConfig,
): string {
  return JSON.stringify(
    LoadBalancerConfig$outboundSchema.parse(loadBalancerConfig),
  );
}

export function loadBalancerConfigFromJSON(
  jsonString: string,
): SafeParseResult<LoadBalancerConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LoadBalancerConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LoadBalancerConfig' from JSON`,
  );
}

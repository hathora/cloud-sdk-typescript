/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const DeprecatedProcessMetricName = {
  Cpu: "cpu",
  Memory: "memory",
  RateEgress: "rate_egress",
  TotalEgress: "total_egress",
  ActiveConnections: "active_connections",
} as const;
export type DeprecatedProcessMetricName = OpenEnum<
  typeof DeprecatedProcessMetricName
>;

/** @internal */
export const DeprecatedProcessMetricName$inboundSchema: z.ZodType<
  DeprecatedProcessMetricName,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(DeprecatedProcessMetricName),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const DeprecatedProcessMetricName$outboundSchema: z.ZodType<
  DeprecatedProcessMetricName,
  z.ZodTypeDef,
  DeprecatedProcessMetricName
> = z.union([
  z.nativeEnum(DeprecatedProcessMetricName),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedProcessMetricName$ {
  /** @deprecated use `DeprecatedProcessMetricName$inboundSchema` instead. */
  export const inboundSchema = DeprecatedProcessMetricName$inboundSchema;
  /** @deprecated use `DeprecatedProcessMetricName$outboundSchema` instead. */
  export const outboundSchema = DeprecatedProcessMetricName$outboundSchema;
}

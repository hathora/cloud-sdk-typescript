/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Construct a type with a set of properties K of type T
 */
export type RecordStringNever = {};

/** @internal */
export const RecordStringNever$inboundSchema: z.ZodType<RecordStringNever, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type RecordStringNever$Outbound = {};

/** @internal */
export const RecordStringNever$outboundSchema: z.ZodType<
    RecordStringNever$Outbound,
    z.ZodTypeDef,
    RecordStringNever
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecordStringNever$ {
    /** @deprecated use `RecordStringNever$inboundSchema` instead. */
    export const inboundSchema = RecordStringNever$inboundSchema;
    /** @deprecated use `RecordStringNever$outboundSchema` instead. */
    export const outboundSchema = RecordStringNever$outboundSchema;
    /** @deprecated use `RecordStringNever$Outbound` instead. */
    export type Outbound = RecordStringNever$Outbound;
}

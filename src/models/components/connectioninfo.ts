/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ActiveConnectionInfo,
    ActiveConnectionInfo$inboundSchema,
    ActiveConnectionInfo$Outbound,
    ActiveConnectionInfo$outboundSchema,
} from "./activeconnectioninfo.js";
import {
    StartingConnectionInfo,
    StartingConnectionInfo$inboundSchema,
    StartingConnectionInfo$Outbound,
    StartingConnectionInfo$outboundSchema,
} from "./startingconnectioninfo.js";
import * as z from "zod";

/**
 * Connection information to the default port.
 */
export type ConnectionInfo = StartingConnectionInfo | ActiveConnectionInfo;

/** @internal */
export const ConnectionInfo$inboundSchema: z.ZodType<ConnectionInfo, z.ZodTypeDef, unknown> =
    z.union([StartingConnectionInfo$inboundSchema, ActiveConnectionInfo$inboundSchema]);

/** @internal */
export type ConnectionInfo$Outbound =
    | StartingConnectionInfo$Outbound
    | ActiveConnectionInfo$Outbound;

/** @internal */
export const ConnectionInfo$outboundSchema: z.ZodType<
    ConnectionInfo$Outbound,
    z.ZodTypeDef,
    ConnectionInfo
> = z.union([StartingConnectionInfo$outboundSchema, ActiveConnectionInfo$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectionInfo$ {
    /** @deprecated use `ConnectionInfo$inboundSchema` instead. */
    export const inboundSchema = ConnectionInfo$inboundSchema;
    /** @deprecated use `ConnectionInfo$outboundSchema` instead. */
    export const outboundSchema = ConnectionInfo$outboundSchema;
    /** @deprecated use `ConnectionInfo$Outbound` instead. */
    export type Outbound = ConnectionInfo$Outbound;
}

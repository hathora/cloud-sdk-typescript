/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Region, Region$inboundSchema, Region$outboundSchema } from "./region.js";
import * as z from "zod";

export type PingEndpoints = {
    port: number;
    host: string;
    region: Region;
};

/** @internal */
export const PingEndpoints$inboundSchema: z.ZodType<PingEndpoints, z.ZodTypeDef, unknown> =
    z.object({
        port: z.number(),
        host: z.string(),
        region: Region$inboundSchema,
    });

/** @internal */
export type PingEndpoints$Outbound = {
    port: number;
    host: string;
    region: string;
};

/** @internal */
export const PingEndpoints$outboundSchema: z.ZodType<
    PingEndpoints$Outbound,
    z.ZodTypeDef,
    PingEndpoints
> = z.object({
    port: z.number(),
    host: z.string(),
    region: Region$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PingEndpoints$ {
    /** @deprecated use `PingEndpoints$inboundSchema` instead. */
    export const inboundSchema = PingEndpoints$inboundSchema;
    /** @deprecated use `PingEndpoints$outboundSchema` instead. */
    export const outboundSchema = PingEndpoints$outboundSchema;
    /** @deprecated use `PingEndpoints$Outbound` instead. */
    export type Outbound = PingEndpoints$Outbound;
}

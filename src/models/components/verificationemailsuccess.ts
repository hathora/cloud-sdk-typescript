/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types";
import * as z from "zod";

export const VerificationEmailSuccess = {
    Success: "success",
} as const;
export type VerificationEmailSuccess = OpenEnum<typeof VerificationEmailSuccess>;

/** @internal */
export namespace VerificationEmailSuccess$ {
    export const inboundSchema: z.ZodType<VerificationEmailSuccess, z.ZodTypeDef, unknown> =
        z.union([
            z.nativeEnum(VerificationEmailSuccess),
            z.string().transform(catchUnrecognizedEnum),
        ]);

    export const outboundSchema = z.union([
        z.nativeEnum(VerificationEmailSuccess),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types/enums.js";
import * as z from "zod";

export const VerificationEmailSuccess = {
    Success: "success",
} as const;
export type VerificationEmailSuccess = OpenEnum<typeof VerificationEmailSuccess>;

/** @internal */
export const VerificationEmailSuccess$inboundSchema: z.ZodType<
    VerificationEmailSuccess,
    z.ZodTypeDef,
    unknown
> = z.union([z.nativeEnum(VerificationEmailSuccess), z.string().transform(catchUnrecognizedEnum)]);

/** @internal */
export const VerificationEmailSuccess$outboundSchema: z.ZodType<
    VerificationEmailSuccess,
    z.ZodTypeDef,
    VerificationEmailSuccess
> = z.union([
    z.nativeEnum(VerificationEmailSuccess),
    z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VerificationEmailSuccess$ {
    /** @deprecated use `VerificationEmailSuccess$inboundSchema` instead. */
    export const inboundSchema = VerificationEmailSuccess$inboundSchema;
    /** @deprecated use `VerificationEmailSuccess$outboundSchema` instead. */
    export const outboundSchema = VerificationEmailSuccess$outboundSchema;
}

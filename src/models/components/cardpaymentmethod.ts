/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CardBrand, CardBrand$inboundSchema, CardBrand$outboundSchema } from "./cardbrand.js";
import * as z from "zod";

export type CardPaymentMethod = {
    last4: string;
    brand: CardBrand;
};

/** @internal */
export const CardPaymentMethod$inboundSchema: z.ZodType<CardPaymentMethod, z.ZodTypeDef, unknown> =
    z.object({
        last4: z.string(),
        brand: CardBrand$inboundSchema,
    });

/** @internal */
export type CardPaymentMethod$Outbound = {
    last4: string;
    brand: string;
};

/** @internal */
export const CardPaymentMethod$outboundSchema: z.ZodType<
    CardPaymentMethod$Outbound,
    z.ZodTypeDef,
    CardPaymentMethod
> = z.object({
    last4: z.string(),
    brand: CardBrand$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardPaymentMethod$ {
    /** @deprecated use `CardPaymentMethod$inboundSchema` instead. */
    export const inboundSchema = CardPaymentMethod$inboundSchema;
    /** @deprecated use `CardPaymentMethod$outboundSchema` instead. */
    export const outboundSchema = CardPaymentMethod$outboundSchema;
    /** @deprecated use `CardPaymentMethod$Outbound` instead. */
    export type Outbound = CardPaymentMethod$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CardBrand,
  CardBrand$inboundSchema,
  CardBrand$outboundSchema,
} from "./cardbrand.js";

export type CardPaymentMethod = {
  last4: string;
  brand: CardBrand;
};

/** @internal */
export const CardPaymentMethod$inboundSchema: z.ZodType<
  CardPaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.object({
  last4: z.string(),
  brand: CardBrand$inboundSchema,
});

/** @internal */
export type CardPaymentMethod$Outbound = {
  last4: string;
  brand: string;
};

/** @internal */
export const CardPaymentMethod$outboundSchema: z.ZodType<
  CardPaymentMethod$Outbound,
  z.ZodTypeDef,
  CardPaymentMethod
> = z.object({
  last4: z.string(),
  brand: CardBrand$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardPaymentMethod$ {
  /** @deprecated use `CardPaymentMethod$inboundSchema` instead. */
  export const inboundSchema = CardPaymentMethod$inboundSchema;
  /** @deprecated use `CardPaymentMethod$outboundSchema` instead. */
  export const outboundSchema = CardPaymentMethod$outboundSchema;
  /** @deprecated use `CardPaymentMethod$Outbound` instead. */
  export type Outbound = CardPaymentMethod$Outbound;
}

export function cardPaymentMethodToJSON(
  cardPaymentMethod: CardPaymentMethod,
): string {
  return JSON.stringify(
    CardPaymentMethod$outboundSchema.parse(cardPaymentMethod),
  );
}

export function cardPaymentMethodFromJSON(
  jsonString: string,
): SafeParseResult<CardPaymentMethod, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardPaymentMethod$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardPaymentMethod' from JSON`,
  );
}

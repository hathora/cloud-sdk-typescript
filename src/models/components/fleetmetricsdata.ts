/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MetricValue,
  MetricValue$inboundSchema,
  MetricValue$Outbound,
  MetricValue$outboundSchema,
} from "./metricvalue.js";

export type FleetMetricsData = {
  utilized?: Array<MetricValue> | undefined;
  provisionedCloud?: Array<MetricValue> | undefined;
  provisionedBareMetal?: Array<MetricValue> | undefined;
  provisionedTotal?: Array<MetricValue> | undefined;
};

/** @internal */
export const FleetMetricsData$inboundSchema: z.ZodType<
  FleetMetricsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  utilized: z.array(MetricValue$inboundSchema).optional(),
  provisionedCloud: z.array(MetricValue$inboundSchema).optional(),
  provisionedBareMetal: z.array(MetricValue$inboundSchema).optional(),
  provisionedTotal: z.array(MetricValue$inboundSchema).optional(),
});

/** @internal */
export type FleetMetricsData$Outbound = {
  utilized?: Array<MetricValue$Outbound> | undefined;
  provisionedCloud?: Array<MetricValue$Outbound> | undefined;
  provisionedBareMetal?: Array<MetricValue$Outbound> | undefined;
  provisionedTotal?: Array<MetricValue$Outbound> | undefined;
};

/** @internal */
export const FleetMetricsData$outboundSchema: z.ZodType<
  FleetMetricsData$Outbound,
  z.ZodTypeDef,
  FleetMetricsData
> = z.object({
  utilized: z.array(MetricValue$outboundSchema).optional(),
  provisionedCloud: z.array(MetricValue$outboundSchema).optional(),
  provisionedBareMetal: z.array(MetricValue$outboundSchema).optional(),
  provisionedTotal: z.array(MetricValue$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FleetMetricsData$ {
  /** @deprecated use `FleetMetricsData$inboundSchema` instead. */
  export const inboundSchema = FleetMetricsData$inboundSchema;
  /** @deprecated use `FleetMetricsData$outboundSchema` instead. */
  export const outboundSchema = FleetMetricsData$outboundSchema;
  /** @deprecated use `FleetMetricsData$Outbound` instead. */
  export type Outbound = FleetMetricsData$Outbound;
}

export function fleetMetricsDataToJSON(
  fleetMetricsData: FleetMetricsData,
): string {
  return JSON.stringify(
    FleetMetricsData$outboundSchema.parse(fleetMetricsData),
  );
}

export function fleetMetricsDataFromJSON(
  jsonString: string,
): SafeParseResult<FleetMetricsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FleetMetricsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FleetMetricsData' from JSON`,
  );
}

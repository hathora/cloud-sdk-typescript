/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { TransportType, TransportType$ } from "./transporttype.js";
import * as z from "zod";

/**
 * Connection details for an active process.
 */
export type ExposedPort = {
    /**
     * Transport type specifies the underlying communication protocol to the exposed port.
     */
    transportType: TransportType;
    port: number;
    host: string;
    name: string;
};

/** @internal */
export namespace ExposedPort$ {
    export const inboundSchema: z.ZodType<ExposedPort, z.ZodTypeDef, unknown> = z.object({
        transportType: TransportType$.inboundSchema,
        port: z.number().int(),
        host: z.string(),
        name: z.string(),
    });

    export type Outbound = {
        transportType: string;
        port: number;
        host: string;
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExposedPort> = z.object({
        transportType: TransportType$.outboundSchema,
        port: z.number().int(),
        host: z.string(),
        name: z.string(),
    });
}

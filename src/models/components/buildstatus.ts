/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types/enums.js";
import * as z from "zod";

export const BuildStatus = {
    Created: "created",
    Running: "running",
    Succeeded: "succeeded",
    Failed: "failed",
} as const;
export type BuildStatus = OpenEnum<typeof BuildStatus>;

/** @internal */
export namespace BuildStatus$ {
    export const inboundSchema: z.ZodType<BuildStatus, z.ZodTypeDef, unknown> = z.union([
        z.nativeEnum(BuildStatus),
        z.string().transform(catchUnrecognizedEnum),
    ]);

    export const outboundSchema: z.ZodType<BuildStatus, z.ZodTypeDef, BuildStatus> = z.union([
        z.nativeEnum(BuildStatus),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { LobbyVisibility, LobbyVisibility$ } from "./lobbyvisibility.js";
import { Region, Region$ } from "./region.js";
import * as z from "zod";

export type CreateLobbyParams = {
    /**
     * Types of lobbies a player can create.
     *
     * @remarks
     *
     * `private`: the player who created the room must share the roomId with their friends
     *
     * `public`: visible in the public lobby list, anyone can join
     *
     * `local`: for testing with a server running locally
     */
    visibility: LobbyVisibility;
    /**
     * User input to initialize the game state. Object must be smaller than 64KB.
     */
    initialConfig?: any | undefined;
    region: Region;
};

/** @internal */
export namespace CreateLobbyParams$ {
    export const inboundSchema: z.ZodType<CreateLobbyParams, z.ZodTypeDef, unknown> = z.object({
        visibility: LobbyVisibility$.inboundSchema,
        initialConfig: z.any().optional(),
        region: Region$.inboundSchema,
    });

    export type Outbound = {
        visibility: string;
        initialConfig?: any | undefined;
        region: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateLobbyParams> = z.object({
        visibility: LobbyVisibility$.outboundSchema,
        initialConfig: z.any().optional(),
        region: Region$.outboundSchema,
    });
}

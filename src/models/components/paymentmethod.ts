/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AchPaymentMethod, AchPaymentMethod$ } from "./achpaymentmethod";
import { CardPaymentMethod, CardPaymentMethod$ } from "./cardpaymentmethod";
import { LinkPaymentMethod, LinkPaymentMethod$ } from "./linkpaymentmethod";
import * as z from "zod";

/**
 * Make all properties in T optional
 */
export type PaymentMethod = {
    card?: CardPaymentMethod | undefined;
    ach?: AchPaymentMethod | undefined;
    link?: LinkPaymentMethod | undefined;
};

/** @internal */
export namespace PaymentMethod$ {
    export type Inbound = {
        card?: CardPaymentMethod$.Inbound | undefined;
        ach?: AchPaymentMethod$.Inbound | undefined;
        link?: LinkPaymentMethod$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PaymentMethod, z.ZodTypeDef, Inbound> = z
        .object({
            card: CardPaymentMethod$.inboundSchema.optional(),
            ach: AchPaymentMethod$.inboundSchema.optional(),
            link: LinkPaymentMethod$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.card === undefined ? null : { card: v.card }),
                ...(v.ach === undefined ? null : { ach: v.ach }),
                ...(v.link === undefined ? null : { link: v.link }),
            };
        });

    export type Outbound = {
        card?: CardPaymentMethod$.Outbound | undefined;
        ach?: AchPaymentMethod$.Outbound | undefined;
        link?: LinkPaymentMethod$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethod> = z
        .object({
            card: CardPaymentMethod$.outboundSchema.optional(),
            ach: AchPaymentMethod$.outboundSchema.optional(),
            link: LinkPaymentMethod$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.card === undefined ? null : { card: v.card }),
                ...(v.ach === undefined ? null : { ach: v.ach }),
                ...(v.link === undefined ? null : { link: v.link }),
            };
        });
}

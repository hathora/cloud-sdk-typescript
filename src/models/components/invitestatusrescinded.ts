/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { catchUnrecognizedEnum, OpenEnum, Unrecognized } from "../../types/enums.js";
import * as z from "zod";

export const InviteStatusRescindedType = {
    Rescinded: "rescinded",
} as const;
export type InviteStatusRescindedType = OpenEnum<typeof InviteStatusRescindedType>;

export type InviteStatusRescinded = {
    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    rescindedBy: string;
    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    userId?: string | undefined;
    type: InviteStatusRescindedType;
};

/** @internal */
export namespace InviteStatusRescindedType$ {
    export const inboundSchema: z.ZodType<InviteStatusRescindedType, z.ZodTypeDef, unknown> =
        z.union([
            z.nativeEnum(InviteStatusRescindedType),
            z.string().transform(catchUnrecognizedEnum),
        ]);

    export const outboundSchema: z.ZodType<
        InviteStatusRescindedType,
        z.ZodTypeDef,
        InviteStatusRescindedType
    > = z.union([
        z.nativeEnum(InviteStatusRescindedType),
        z.string().and(z.custom<Unrecognized<string>>()),
    ]);
}

/** @internal */
export namespace InviteStatusRescinded$ {
    export const inboundSchema: z.ZodType<InviteStatusRescinded, z.ZodTypeDef, unknown> = z.object({
        rescindedBy: z.string(),
        userId: z.string().optional(),
        type: InviteStatusRescindedType$.inboundSchema,
    });

    export type Outbound = {
        rescindedBy: string;
        userId?: string | undefined;
        type: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InviteStatusRescinded> =
        z.object({
            rescindedBy: z.string(),
            userId: z.string().optional(),
            type: InviteStatusRescindedType$.outboundSchema,
        });
}

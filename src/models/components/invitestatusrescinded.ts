/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum InviteStatusRescindedType {
    Rescinded = "rescinded",
}

export type InviteStatusRescinded = {
    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    rescindedBy: string;
    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    userId?: string | undefined;
    type: InviteStatusRescindedType;
};

/** @internal */
export const InviteStatusRescindedType$: z.ZodNativeEnum<typeof InviteStatusRescindedType> =
    z.nativeEnum(InviteStatusRescindedType);

/** @internal */
export namespace InviteStatusRescinded$ {
    export type Inbound = {
        rescindedBy: string;
        userId?: string | undefined;
        type: InviteStatusRescindedType;
    };

    export const inboundSchema: z.ZodType<InviteStatusRescinded, z.ZodTypeDef, Inbound> = z
        .object({
            rescindedBy: z.string(),
            userId: z.string().optional(),
            type: InviteStatusRescindedType$,
        })
        .transform((v) => {
            return {
                rescindedBy: v.rescindedBy,
                ...(v.userId === undefined ? null : { userId: v.userId }),
                type: v.type,
            };
        });

    export type Outbound = {
        rescindedBy: string;
        userId?: string | undefined;
        type: InviteStatusRescindedType;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InviteStatusRescinded> = z
        .object({
            rescindedBy: z.string(),
            userId: z.string().optional(),
            type: InviteStatusRescindedType$,
        })
        .transform((v) => {
            return {
                rescindedBy: v.rescindedBy,
                ...(v.userId === undefined ? null : { userId: v.userId }),
                type: v.type,
            };
        });
}

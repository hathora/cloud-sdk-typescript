/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AutoscalerTargetMetric,
  AutoscalerTargetMetric$inboundSchema,
  AutoscalerTargetMetric$Outbound,
  AutoscalerTargetMetric$outboundSchema,
} from "./autoscalertargetmetric.js";

/**
 * The configuration for the Process Autoscaler for this application.
 *
 * @remarks
 * Autoscaling must be enabled on a per-region basis.
 * EXPERIMENTAL - This feature is in closed beta.
 */
export type ProcessAutoscalerConfig = {
  targetMetric: AutoscalerTargetMetric;
};

/** @internal */
export const ProcessAutoscalerConfig$inboundSchema: z.ZodType<
  ProcessAutoscalerConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  targetMetric: AutoscalerTargetMetric$inboundSchema,
});

/** @internal */
export type ProcessAutoscalerConfig$Outbound = {
  targetMetric: AutoscalerTargetMetric$Outbound;
};

/** @internal */
export const ProcessAutoscalerConfig$outboundSchema: z.ZodType<
  ProcessAutoscalerConfig$Outbound,
  z.ZodTypeDef,
  ProcessAutoscalerConfig
> = z.object({
  targetMetric: AutoscalerTargetMetric$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProcessAutoscalerConfig$ {
  /** @deprecated use `ProcessAutoscalerConfig$inboundSchema` instead. */
  export const inboundSchema = ProcessAutoscalerConfig$inboundSchema;
  /** @deprecated use `ProcessAutoscalerConfig$outboundSchema` instead. */
  export const outboundSchema = ProcessAutoscalerConfig$outboundSchema;
  /** @deprecated use `ProcessAutoscalerConfig$Outbound` instead. */
  export type Outbound = ProcessAutoscalerConfig$Outbound;
}

export function processAutoscalerConfigToJSON(
  processAutoscalerConfig: ProcessAutoscalerConfig,
): string {
  return JSON.stringify(
    ProcessAutoscalerConfig$outboundSchema.parse(processAutoscalerConfig),
  );
}

export function processAutoscalerConfigFromJSON(
  jsonString: string,
): SafeParseResult<ProcessAutoscalerConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProcessAutoscalerConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProcessAutoscalerConfig' from JSON`,
  );
}

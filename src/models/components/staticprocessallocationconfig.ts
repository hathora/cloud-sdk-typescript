/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Region,
  Region$inboundSchema,
  Region$outboundSchema,
} from "./region.js";

export type StaticProcessAllocationConfig = {
  /**
   * The maximum number of running processes that can be spun up during upgrades
   *
   * @remarks
   * Invariant: minProcesses <= maxProcesses
   */
  maxProcesses: number;
  /**
   * The target number of running processes
   */
  targetProcesses: number;
  /**
   * The minimum running processes required during upgrades.
   *
   * @remarks
   * Invariant: 0 <= minProcesses < targetProcesses
   */
  minProcesses: number;
  region: Region;
};

/** @internal */
export const StaticProcessAllocationConfig$inboundSchema: z.ZodType<
  StaticProcessAllocationConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  maxProcesses: z.number().int(),
  targetProcesses: z.number().int(),
  minProcesses: z.number().int(),
  region: Region$inboundSchema,
});

/** @internal */
export type StaticProcessAllocationConfig$Outbound = {
  maxProcesses: number;
  targetProcesses: number;
  minProcesses: number;
  region: string;
};

/** @internal */
export const StaticProcessAllocationConfig$outboundSchema: z.ZodType<
  StaticProcessAllocationConfig$Outbound,
  z.ZodTypeDef,
  StaticProcessAllocationConfig
> = z.object({
  maxProcesses: z.number().int(),
  targetProcesses: z.number().int(),
  minProcesses: z.number().int(),
  region: Region$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StaticProcessAllocationConfig$ {
  /** @deprecated use `StaticProcessAllocationConfig$inboundSchema` instead. */
  export const inboundSchema = StaticProcessAllocationConfig$inboundSchema;
  /** @deprecated use `StaticProcessAllocationConfig$outboundSchema` instead. */
  export const outboundSchema = StaticProcessAllocationConfig$outboundSchema;
  /** @deprecated use `StaticProcessAllocationConfig$Outbound` instead. */
  export type Outbound = StaticProcessAllocationConfig$Outbound;
}

export function staticProcessAllocationConfigToJSON(
  staticProcessAllocationConfig: StaticProcessAllocationConfig,
): string {
  return JSON.stringify(
    StaticProcessAllocationConfig$outboundSchema.parse(
      staticProcessAllocationConfig,
    ),
  );
}

export function staticProcessAllocationConfigFromJSON(
  jsonString: string,
): SafeParseResult<StaticProcessAllocationConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StaticProcessAllocationConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StaticProcessAllocationConfig' from JSON`,
  );
}
